plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.github.fuadreza.basecleanarchitecture"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        versionNameSuffix "-${gitSha()}"
        setProperty("archivesBaseName", "appName-"+versionName+versionNameSuffix)
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        appDefault {
            keyAlias "appName"
            keyPassword "jshUshI@ca"
            storeFile file('appName.jks')
            storePassword "jshUshI@ca"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.appDefault
            buildConfigField("String", "API_BASE_URL", API_BASE_URL)
            buildConfigField("String", "API_KEY", API_KEY)
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.appDefault
            buildConfigField("String", "API_BASE_URL", API_BASE_URL)
            buildConfigField("String", "API_KEY", API_KEY)
        }
    }

    flavorDimensions "app-dimension"
    productFlavors {
        dev {
            dimension "app-dimension"
        }
        prod {
            dimension "app-dimension"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures { // https://developer.android.com/studio/releases/gradle-plugin#buildFeatures
        // https://developer.android.com/topic/libraries/data-binding/start
        dataBinding = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google Products & Support library dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.multidex:multidex:$rootProject.ext.androidMultiDex"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "com.google.android.material:material:$rootProject.androidMaterialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.viewpager2:viewpager2:$rootProject.viewPager2Version"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // Dagger Hilt (dependency injection)
    // https://developer.android.com/training/dependency-injection/hilt-android#setup
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Hilt and Jetpack integrations
    // https://developer.android.com/training/dependency-injection/hilt-jetpack
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.androidXHilt"
    kapt "androidx.hilt:hilt-compiler:$rootProject.androidXHilt"

    //
    // 3rd-Party Libraries
    // --------------------------------------------------

    // - - LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // OkHttp Client
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    //image slider
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Timber for logging
    implementation "com.jakewharton.timber:timber:$rootProject.timberLibraryVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    // Testing
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //for testing retrofit.
    testImplementation("com.squareup.okhttp3:mockwebserver:4.7.2")
}